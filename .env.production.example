# RoastMyPost Production Environment Variables
# Copy this file to .env.production and fill in your values
# NEVER commit the actual .env.production file to version control

# ============================================
# REQUIRED: Core Application Settings
# ============================================

# Node.js environment (always 'production' for production deployments)
NODE_ENV=production

# PostgreSQL Database URL
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=public
# For Docker/K8s: Use the service name as HOST (e.g., postgres-service)
DATABASE_URL=postgresql://postgres:password@localhost:5432/roastmypost?schema=public

# NextAuth Configuration
# NEXTAUTH_URL should be your full production URL including https://
NEXTAUTH_URL=https://your-domain.com
# Generate with: openssl rand -base64 32
AUTH_SECRET=your-random-32-character-secret-here

# ============================================
# REQUIRED: AI/LLM Configuration
# ============================================

# Anthropic API Key for Claude
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-api03-...

# OpenRouter API Key (if using OpenRouter for LLM access)
# Get from: https://openrouter.ai/keys
OPENROUTER_API_KEY=sk-or-v1-...

# ============================================
# REQUIRED: Email Configuration
# ============================================

# Email provider configuration 

# Resend
AUTH_RESEND_KEY=re_123456789_abcdefghijklmnop
EMAIL_FROM=noreply@your-domain.com

# ============================================
# OPTIONAL: Performance & Monitoring
# ============================================

# Next.js telemetry (disabled by default for privacy)
NEXT_TELEMETRY_DISABLED=1

# Node.js memory limit (in MB) - adjust based on container resources
NODE_OPTIONS="--max-old-space-size=1024"

# Enable Next.js standalone mode tracing
NEXT_TRACE_WARNINGS=1

# ============================================
# OPTIONAL: Security Headers
# ============================================

# Content Security Policy (customize based on your needs)
NEXT_PUBLIC_CSP_HEADER="default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline'; style-src 'self' 'unsafe-inline';"

# ============================================
# OPTIONAL: Feature Flags
# ============================================

# Enable/disable specific features
ENABLE_MCP_SERVER=false
ENABLE_COST_TRACKING=true
ENABLE_JOB_PROCESSING=true

# ============================================
# OPTIONAL: External Services
# ============================================

# MCP (Model Context Protocol) Configuration
# Only needed if using MCP features
ROAST_MY_POST_MCP_USER_API_KEY=your-mcp-api-key
ROAST_MY_POST_MCP_DATABASE_URL="${DATABASE_URL}"
ROAST_MY_POST_MCP_API_BASE_URL="https://your-domain.com"

# ============================================
# OPTIONAL: Observability
# ============================================

# OpenTelemetry Configuration
# OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
# OTEL_SERVICE_NAME=roastmypost-web
# OTEL_TRACES_EXPORTER=otlp

# Sentry Error Tracking
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
# SENTRY_ENVIRONMENT=production

# ============================================
# OPTIONAL: Rate Limiting & Caching
# ============================================

# Redis connection for session storage and caching
# REDIS_URL=redis://localhost:6379

# Rate limiting configuration
# RATE_LIMIT_WINDOW_MS=60000
# RATE_LIMIT_MAX_REQUESTS=100

# ============================================
# Docker/Kubernetes Specific
# ============================================

# Health check configuration
HEALTH_CHECK_TIMEOUT=3000
HEALTH_CHECK_INTERVAL=30000

# Graceful shutdown timeout (in milliseconds)
SHUTDOWN_TIMEOUT=30000

# Worker process configuration
WORKER_CONCURRENCY=2
JOB_BATCH_SIZE=10
JOB_RETRY_ATTEMPTS=3
JOB_RETRY_DELAY_MS=5000

# ============================================
# NOTES FOR DEPLOYMENT
# ============================================

# 1. Generate secure secrets:
#    AUTH_SECRET: openssl rand -base64 32
#    API Keys: Use strong, unique keys from each service
#
# 2. Database URL format:
#    - Local: postgresql://user:pass@localhost:5432/dbname
#    - Docker: postgresql://user:pass@postgres:5432/dbname
#    - Cloud: Use connection string from your provider
#
# 3. For Kubernetes deployments:
#    - Store these as Secrets, not ConfigMaps
#    - Use sealed-secrets or external-secrets-operator
#    - Never store secrets in your container image
#
# 4. Environment-specific values:
#    - Development: http://localhost:3000
#    - Staging: https://staging.your-domain.com
#    - Production: https://your-domain.com
#
# 5. Monitoring:
#    - Set up alerts for missing required env vars
#    - Monitor rate limits and API usage
#    - Track database connection pool metrics